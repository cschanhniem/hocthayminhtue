{% macro renderNode(node, level=0) %}
<li>
  {% if node.children and node.children.length > 0 %}
  <div class="node-content level-{{ level }}">
    <button class="toggle" onclick="toggleNode(this)" aria-label="Toggle {{ node.label }}">+</button>
    <a href="/concepts/{{ node.id }}/" {% if page.url == '/concepts/' + node.id + '/' %}class="active"{% endif %}>
      {{ node.label }}
    </a>
  </div>
  <ul class="tree-children">
    {% for child in node.children %}
      {{ renderNode(child, level + 1) }}
    {% endfor %}
  </ul>
  {% else %}
  <div class="node-content level-{{ level }}">
    <span class="leaf-spacer"></span>
    <a href="/concepts/{{ node.id }}/" {% if page.url == '/concepts/' + node.id + '/' %}class="active"{% endif %}>
      {{ node.label }}
    </a>
  </div>
  {% endif %}
</li>
{% endmacro %}

<ul class="tree">
  {% for node in concepts %}
    {{ renderNode(node) }}
  {% endfor %}
</ul>

<script>
function toggleNode(button) {
  const li = button.closest('li');
  li.classList.toggle('collapsed');
  button.textContent = li.classList.contains('collapsed') ? '+' : '-';
}

// Set initial state of toggle buttons
document.addEventListener('DOMContentLoaded', () => {
  const toggles = document.querySelectorAll('.toggle');
  toggles.forEach(toggle => {
    toggle.textContent = '-';
  });
});
</script>
